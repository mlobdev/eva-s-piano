[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://dpr1ed8tspubc"]

[sub_resource type="VisualShaderNodeBooleanConstant" id="VisualShaderNodeBooleanConstant_5v00x"]
constant = true

[sub_resource type="VisualShaderNodeBooleanConstant" id="VisualShaderNodeBooleanConstant_6d5ee"]
constant = true

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_5v00x"]
parameter_name = "specific_color"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_6d5ee"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_pdqsq"]
parameter_name = "custom_background_color"
qualifier = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_5b0y8"]
input_name = "color"

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_5v00x"]
parameter_name = "focusing"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_6d5ee"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 1.0, 2, 0.001, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_5b0y8"]
parameter_name = "custom_highlight_color"
qualifier = 1

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_xne5q"]
output_port_for_preview = 0
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, 0.5]
op_type = 6

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 specific_color : source_color;
global uniform vec4 custom_background_color : source_color;
global uniform vec4 custom_highlight_color : source_color;
uniform bool focusing;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = specific_color;


// ColorParameter:4
	vec4 n_out4p0 = custom_background_color;


// ColorParameter:8
	vec4 n_out8p0 = custom_highlight_color;


// BooleanParameter:6
	bool n_out6p0 = focusing;


// BooleanConstant:10
	bool n_out10p0 = true;


// BooleanConstant:11
	bool n_out11p0 = true;


	vec3 n_out7p0;
// If:7
	float n_in7p2 = 0.00100;
	vec3 n_in7p3 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in7p4 = vec3(0.00000, 0.00000, 0.00000);
	if(abs((n_out6p0 ? 1.0 : 0.0) - (n_out10p0 ? 1.0 : 0.0)) < n_in7p2)
	{
		n_out7p0 = n_in7p3;
	}
	else if((n_out6p0 ? 1.0 : 0.0) < (n_out10p0 ? 1.0 : 0.0))
	{
		n_out7p0 = vec3(n_out11p0 ? 1.0 : 0.0);
	}
	else
	{
		n_out7p0 = n_in7p4;
	}


// Mix:9
	vec4 n_out9p0 = mix(n_out4p0, n_out8p0, n_out7p0.x);


// Input:5
	vec4 n_out5p0 = COLOR;


// Mix:3
	vec4 n_out3p0 = mix(n_out2p0, n_out9p0, n_out5p0);


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(680, -100)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_5v00x")
nodes/fragment/2/position = Vector2(-40, -140)
nodes/fragment/3/node = SubResource("VisualShaderNodeMix_6d5ee")
nodes/fragment/3/position = Vector2(440, 20)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorParameter_pdqsq")
nodes/fragment/4/position = Vector2(-540, -120)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_5b0y8")
nodes/fragment/5/position = Vector2(80, 460)
nodes/fragment/6/node = SubResource("VisualShaderNodeBooleanParameter_5v00x")
nodes/fragment/6/position = Vector2(-540, 280)
nodes/fragment/7/node = SubResource("VisualShaderNodeIf_6d5ee")
nodes/fragment/7/position = Vector2(-160, 300)
nodes/fragment/8/node = SubResource("VisualShaderNodeColorParameter_5b0y8")
nodes/fragment/8/position = Vector2(-540, 80)
nodes/fragment/9/node = SubResource("VisualShaderNodeMix_xne5q")
nodes/fragment/9/position = Vector2(60, 80)
nodes/fragment/10/node = SubResource("VisualShaderNodeBooleanConstant_5v00x")
nodes/fragment/10/position = Vector2(-500, 460)
nodes/fragment/11/node = SubResource("VisualShaderNodeBooleanConstant_6d5ee")
nodes/fragment/11/position = Vector2(-500, 580)
nodes/fragment/connections = PackedInt32Array(5, 0, 3, 2, 4, 0, 9, 0, 8, 0, 9, 1, 7, 0, 9, 2, 3, 0, 0, 0, 9, 0, 3, 1, 2, 0, 3, 0, 6, 0, 7, 0, 10, 0, 7, 1, 11, 0, 7, 5)
